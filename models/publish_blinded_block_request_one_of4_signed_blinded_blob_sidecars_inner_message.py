# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class PublishBlindedBlockRequestOneOf4SignedBlindedBlobSidecarsInnerMessage(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    PublishBlindedBlockRequestOneOf4SignedBlindedBlobSidecarsInnerMessage - a model defined in OpenAPI

        block_root: The block_root of this PublishBlindedBlockRequestOneOf4SignedBlindedBlobSidecarsInnerMessage [Optional].
        index: The index of this PublishBlindedBlockRequestOneOf4SignedBlindedBlobSidecarsInnerMessage [Optional].
        slot: The slot of this PublishBlindedBlockRequestOneOf4SignedBlindedBlobSidecarsInnerMessage [Optional].
        block_parent_root: The block_parent_root of this PublishBlindedBlockRequestOneOf4SignedBlindedBlobSidecarsInnerMessage [Optional].
        proposer_index: The proposer_index of this PublishBlindedBlockRequestOneOf4SignedBlindedBlobSidecarsInnerMessage [Optional].
        blob_root: The blob_root of this PublishBlindedBlockRequestOneOf4SignedBlindedBlobSidecarsInnerMessage [Optional].
        kzg_commitment: The kzg_commitment of this PublishBlindedBlockRequestOneOf4SignedBlindedBlobSidecarsInnerMessage [Optional].
        kzg_proof: The kzg_proof of this PublishBlindedBlockRequestOneOf4SignedBlindedBlobSidecarsInnerMessage [Optional].
    """

    block_root: Optional[str] = Field(alias="block_root", default=None)
    index: Optional[str] = Field(alias="index", default=None)
    slot: Optional[str] = Field(alias="slot", default=None)
    block_parent_root: Optional[str] = Field(alias="block_parent_root", default=None)
    proposer_index: Optional[str] = Field(alias="proposer_index", default=None)
    blob_root: Optional[str] = Field(alias="blob_root", default=None)
    kzg_commitment: Optional[str] = Field(alias="kzg_commitment", default=None)
    kzg_proof: Optional[str] = Field(alias="kzg_proof", default=None)

    @validator("block_root")
    def block_root_pattern(cls, value):
        assert value is not None and re.match(r"^0x[a-fA-F0-9]{64}$", value)
        return value

    @validator("block_parent_root")
    def block_parent_root_pattern(cls, value):
        assert value is not None and re.match(r"^0x[a-fA-F0-9]{64}$", value)
        return value

    @validator("blob_root")
    def blob_root_pattern(cls, value):
        assert value is not None and re.match(r"^0x[a-fA-F0-9]{64}$", value)
        return value

    @validator("kzg_commitment")
    def kzg_commitment_pattern(cls, value):
        assert value is not None and re.match(r"^0x[a-fA-F0-9]{96}$", value)
        return value

    @validator("kzg_proof")
    def kzg_proof_pattern(cls, value):
        assert value is not None and re.match(r"^0x[a-fA-F0-9]{96}$", value)
        return value

PublishBlindedBlockRequestOneOf4SignedBlindedBlobSidecarsInnerMessage.update_forward_refs()
